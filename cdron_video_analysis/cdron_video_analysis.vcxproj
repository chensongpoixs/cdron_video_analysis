<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>15.0</VCProjectVersion>
    <ProjectGuid>{586F4CB7-3027-414F-B89B-ADC62997DB23}</ProjectGuid>
    <RootNamespace>cdronvideoanalysis</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v141</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.8.props" />
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>$(C_INCLUDE)\json\include;$(C_INCLUDE)\libhv\include;$(C_INCLUDE)\opencv\include;$(C_INCLUDE)\libtorch\include;$(C_INCLUDE)\libtorch\include\torch\csrc\api\include;$(C_INCLUDE)\MNN\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;$(IncludePath)</IncludePath>
    <OutDir>$(SolutionDir)bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)..\vsout\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>$(C_INCLUDE)\json\include;$(C_INCLUDE)\libhv\include;$(C_INCLUDE)\opencv\include;$(C_INCLUDE)\MNN\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\\include;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\include;C:\Program Files\NVIDIA Corporation\NvToolsExt\include;$(C_INCLUDE)\boost\include;$(IncludePath)</IncludePath>
    <LibraryPath>$(C_INCLUDE)\json\lib\x64\release;$(C_INCLUDE)\opencv\x64\vc16\lib;$(C_INCLUDE)\libtorch\lib;$(C_INCLUDE)\MNN\lib\x64\Release\Static\MD;$(C_INCLUDE)\libhv\lib;$(C_INCLUDE)\boost\lib\x64;$(LibraryPath)</LibraryPath>
    <OutDir>$(SolutionDir)bin\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)..\vsout\$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>EnableAllWarnings</WarningLevel>
      <Optimization>Disabled</Optimization>
      <SDLCheck>false</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
      <AdditionalIncludeDirectories>HyperLPR</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <RuntimeTypeInfo>
      </RuntimeTypeInfo>
      <PreprocessorDefinitions>INFERENCE_HELPER_ENABLE_MNN;_MBCS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <ConformanceMode>true</ConformanceMode>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>EnableAllWarnings</WarningLevel>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>false</IntrinsicFunctions>
      <SDLCheck>
      </SDLCheck>
      <ConformanceMode>false</ConformanceMode>
      <AdditionalIncludeDirectories>HyperLPR;$(C_INCLUDE)\libtorch\include;$(C_INCLUDE)\libtorch\include\torch\csrc\api\include</AdditionalIncludeDirectories>
      <LanguageStandard>stdcpp14</LanguageStandard>
      <RuntimeTypeInfo>
      </RuntimeTypeInfo>
      <PreprocessorDefinitions>WIN32_LEAN_AND_MEAN;_WINSOCK_DEPRECATED_NO_WARNINGS;WIN32;_WINDOWS;NDEBUG;NOMINMAX;USE_DISTRIBUTED;USE_C10D_GLOO;INFERENCE_HELPER_ENABLE_MNN;_MBCS;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>jsoncpp.lib;libboost_chrono-vc140-mt-1_60.lib;libboost_date_time-vc140-mt-1_60.lib;libboost_filesystem-vc140-mt-1_60.lib;libboost_locale-vc140-mt-1_60.lib;libboost_regex-vc140-mt-1_60.lib;libboost_system-vc140-mt-1_60.lib;libboost_thread-vc140-mt-1_60.lib;hv.lib;opencv_world460.lib;opencv_img_hash460.lib;c10.lib;kineto.lib;C:\Program Files\NVIDIA Corporation\NvToolsExt\\lib\x64\nvToolsExt64_1.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cudart_static.lib;caffe2_nvrtc.lib;c10_cuda.lib;torch.lib;torch_cuda.lib;torch_cpu.lib;-INCLUDE:?warp_size@cuda@at@@YAHXZ;C:\Program Files\NVIDIA Corporation\NvToolsExt\lib\x64\nvToolsExt64_1.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cufft.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\curand.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cublas.lib;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.8\lib\x64\cublasLt.lib;MNN.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="casync_log.h" />
    <ClInclude Include="ccfg.h" />
    <ClInclude Include="ccmd_param.h" />
    <ClInclude Include="cconfig.h" />
    <ClInclude Include="cdigit2str.h" />
    <ClInclude Include="cdron_video_analysls.h" />
    <ClInclude Include="cgpu_detector.h" />
    <ClInclude Include="clib_util.h" />
    <ClInclude Include="clicense_plate.h" />
    <ClInclude Include="clog.h" />
    <ClInclude Include="clog_color.h" />
    <ClInclude Include="clog_define.h" />
    <ClInclude Include="cmem_pool.h" />
    <ClInclude Include="cmqtt_mgr.h" />
    <ClInclude Include="cmsg_buffer.h" />
    <ClInclude Include="cnet_define.h" />
    <ClInclude Include="cnet_mgr.h" />
    <ClInclude Include="cnet_msg.h" />
    <ClInclude Include="cnet_msg_header.h" />
    <ClInclude Include="cnet_msg_queue.h" />
    <ClInclude Include="cnet_msg_reserve.h" />
    <ClInclude Include="cnet_session.h" />
    <ClInclude Include="cnet_type.h" />
    <ClInclude Include="cnoncopyable.h" />
    <ClInclude Include="crandom.h" />
    <ClInclude Include="csingleton.h" />
    <ClInclude Include="ctime_api.h" />
    <ClInclude Include="ctime_const.h" />
    <ClInclude Include="ctime_elapse.h" />
    <ClInclude Include="cvideo_analysis.h" />
    <ClInclude Include="cvideo_analysis_mgr.h" />
    <ClInclude Include="cxxopts.h" />
    <ClInclude Include="cyolov_dnn.h" />
    <ClInclude Include="detector.h" />
    <ClInclude Include="HyperLPR\basic_types.h" />
    <ClInclude Include="HyperLPR\buffer_module\all.h" />
    <ClInclude Include="HyperLPR\buffer_module\camera_buffer.h" />
    <ClInclude Include="HyperLPR\configuration.h" />
    <ClInclude Include="HyperLPR\context_module\all.h" />
    <ClInclude Include="HyperLPR\context_module\hyper_lpr_common.h" />
    <ClInclude Include="HyperLPR\context_module\hyper_lpr_context.h" />
    <ClInclude Include="HyperLPR\c_api\hyper_lpr_sdk.h" />
    <ClInclude Include="HyperLPR\c_api\hyper_lpr_sdk_internal.h" />
    <ClInclude Include="HyperLPR\doc.h" />
    <ClInclude Include="HyperLPR\inference_helper_module\inference_helper.h" />
    <ClInclude Include="HyperLPR\inference_helper_module\inference_helper_log.h" />
    <ClInclude Include="HyperLPR\inference_helper_module\inference_helper_mnn.h" />
    <ClInclude Include="HyperLPR\log.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\all.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\classification\all.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\classification\classification_engine.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\classification\plate_classification.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\classification\plate_cls_common.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\detect\all.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\detect\det_arch.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\detect\det_backbone.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\detect\det_header.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\detect\plate_detector.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\detect\plate_det_common.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\recognition\all.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\recognition\plate_recognition.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\recognition\plate_recognition_tokenize.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\recognition\recognition_commom.h" />
    <ClInclude Include="HyperLPR\nn_implementation_module\recognition\recognition_engine.h" />
    <ClInclude Include="HyperLPR\nn_module\all.h" />
    <ClInclude Include="HyperLPR\nn_module\mnn_adapter.h" />
    <ClInclude Include="HyperLPR\utils.h" />
    <ClInclude Include="HyperLPR\version.h" />
    <ClInclude Include="utils.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="casync_log.cpp" />
    <ClCompile Include="ccfg.cpp" />
    <ClCompile Include="ccmd_param.cpp" />
    <ClCompile Include="cconfig.cpp" />
    <ClCompile Include="cdigit2str.cpp" />
    <ClCompile Include="cdron_video_analysls.cpp" />
    <ClCompile Include="cgpu_detector.cpp" />
    <ClCompile Include="clicense_plate.cpp" />
    <ClCompile Include="clog.cpp" />
    <ClCompile Include="clog_color.cpp" />
    <ClCompile Include="cmem_pool.cpp" />
    <ClCompile Include="cmqtt_mgr.cpp" />
    <ClCompile Include="cmsg_buffer.cpp" />
    <ClCompile Include="cnet_mgr.cpp" />
    <ClCompile Include="cnet_msg.cpp" />
    <ClCompile Include="cnet_msg_queue.cpp" />
    <ClCompile Include="cnet_msg_reserve.cpp" />
    <ClCompile Include="cnet_session.cpp" />
    <ClCompile Include="cnet_type.cpp" />
    <ClCompile Include="crandom.cpp" />
    <ClCompile Include="ctime_api.cpp" />
    <ClCompile Include="cvideo_analysis.cpp" />
    <ClCompile Include="cvideo_analysis_mgr.cpp" />
    <ClCompile Include="cyolov_dnn.cpp" />
    <ClCompile Include="detector.cpp" />
    <ClCompile Include="HyperLPR\buffer_module\camera_buffer.cpp" />
    <ClCompile Include="HyperLPR\context_module\hyper_lpr_context.cpp" />
    <ClCompile Include="HyperLPR\c_api\hyper_lpr_sdk.cc" />
    <ClCompile Include="HyperLPR\inference_helper_module\inference_helper.cpp" />
    <ClCompile Include="HyperLPR\inference_helper_module\inference_helper_mnn.cpp" />
    <ClCompile Include="HyperLPR\nn_implementation_module\classification\classification_engine.cpp" />
    <ClCompile Include="HyperLPR\nn_implementation_module\classification\plate_classification.cpp" />
    <ClCompile Include="HyperLPR\nn_implementation_module\detect\det_arch.cpp" />
    <ClCompile Include="HyperLPR\nn_implementation_module\detect\det_backbone.cpp" />
    <ClCompile Include="HyperLPR\nn_implementation_module\detect\det_header.cpp" />
    <ClCompile Include="HyperLPR\nn_implementation_module\detect\plate_detector.cpp" />
    <ClCompile Include="HyperLPR\nn_implementation_module\recognition\plate_recognition.cpp" />
    <ClCompile Include="HyperLPR\nn_implementation_module\recognition\recognition_engine.cpp" />
    <ClCompile Include="HyperLPR\nn_module\mnn_adapter.cpp" />
    <ClCompile Include="main.cpp" />
    <ClCompile Include="test_gpu.cpp" />
    <ClCompile Include="test_mqtt.cpp" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 11.8.targets" />
  </ImportGroup>
</Project>